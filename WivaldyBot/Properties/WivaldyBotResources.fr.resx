<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompareConsumptionBad" xml:space="preserve">
    <value>![Augmentation]({0}/Images/wivaldy_icon_home-overload-200x200.png)</value>
  </data>
  <data name="CompareConsumptionGood" xml:space="preserve">
    <value>![Diminution]({0}/Images/wivaldy_icon_home-sleepy-200x200.png)</value>
  </data>
  <data name="CompareConsumptionkWh" xml:space="preserve">
    <value>{0} kWh vs {1} kWh.</value>
  </data>
  <data name="CompareConsumptionLastHourYesterday" xml:space="preserve">
    <value>La comparaison de votre consommation entre l'heure passée et hier à la même heure est de </value>
  </data>
  <data name="CompareConsumptionTodayYesterday" xml:space="preserve">
    <value>La comparaison de votre consommation entre aujourd'hui et hier (à la même heure) est de </value>
  </data>
  <data name="CompareConsumptionYesterdayDayBefore" xml:space="preserve">
    <value>La comparaison de votre consommation entre hier et avant-hier est de </value>
  </data>
  <data name="DialogActivitySelect" xml:space="preserve">
    <value>Sélectionnez une activité</value>
  </data>
  <data name="DialogActivityTellUs" xml:space="preserve">
    <value>Dites-moi ce que vous voulez faire</value>
  </data>
  <data name="DialogCompareLastHourYesterdaySameTime" xml:space="preserve">
    <value>Dernière heure avec hier à la même heure.</value>
  </data>
  <data name="DialogCompareTodayYesterday" xml:space="preserve">
    <value>Aujourd'hui et hier</value>
  </data>
  <data name="DialogCompareYesterdayDayBefore" xml:space="preserve">
    <value>Hier et avant-hier</value>
  </data>
  <data name="DialogConfirmationKey" xml:space="preserve">
    <value>Merci !</value>
  </data>
  <data name="DialogConsumptionDay" xml:space="preserve">
    <value>Aujourd'hui</value>
  </data>
  <data name="DialogConsumptionHour" xml:space="preserve">
    <value>Dernière heure</value>
  </data>
  <data name="DialogConsumptionInstant" xml:space="preserve">
    <value>Consommation temps réel</value>
  </data>
  <data name="DialogConsumptionLastDay" xml:space="preserve">
    <value>Hier</value>
  </data>
  <data name="DialogElectricityConsumption" xml:space="preserve">
    <value>Consommation électrique</value>
  </data>
  <data name="DialogElectricityTellUs" xml:space="preserve">
    <value>Sélectionnez une consommation</value>
  </data>
  <data name="DialogErrorMessage" xml:space="preserve">
    <value>Oups, quelque chose n'a pas fonctionné.</value>
  </data>
  <data name="DialogGetPrivateKey" xml:space="preserve">
    <value>Avant de commencer, entrez votre clé privée.</value>
  </data>
  <data name="DialogKeyIs" xml:space="preserve">
    <value>Votre clé est {0}</value>
  </data>
  <data name="DialogKeyRemoved" xml:space="preserve">
    <value>Votre clé a été supprimée.</value>
  </data>
  <data name="DialogWelcomeCompare" xml:space="preserve">
    <value>Comparer ma consommation</value>
  </data>
  <data name="DialogWelcomeElectricity" xml:space="preserve">
    <value>Vérifier ma consommation</value>
  </data>
  <data name="DialogWelcomeKey" xml:space="preserve">
    <value>Clé</value>
  </data>
  <data name="DialogWelcomeLogout" xml:space="preserve">
    <value>Se déconnecter</value>
  </data>
  <data name="DialogWelcomeMessage" xml:space="preserve">
    <value>Bienvenue dans l'assistant Wivaldy, écrivez quelque chose pour commencer et je vous aiderai :-). Tapez 'clé' pour obtenir votre clé ou 'se déconnecter' pour la supprimer.</value>
  </data>
  <data name="TotalConsumptionInstant" xml:space="preserve">
    <value>{0} watts.</value>
  </data>
  <data name="TotalConsumptionKwh" xml:space="preserve">
    <value>{0} kWh. Coût d'environ {1} €.</value>
  </data>
  <data name="TotalConsumptionLastHour" xml:space="preserve">
    <value>Votre consommation totale pour la dernière heure est</value>
  </data>
  <data name="TotalConsumptionNoData" xml:space="preserve">
    <value>Désolé, il n'y a aucune donnée disponible.</value>
  </data>
  <data name="TotalConsumptionNow" xml:space="preserve">
    <value>Votre consommation instantanée est de </value>
  </data>
  <data name="TotalConsumptionTodayIs" xml:space="preserve">
    <value>Votre consommation totale pour aujourd'hui est de </value>
  </data>
  <data name="TotalConsumptionYesterday" xml:space="preserve">
    <value>Votre consommation totale d'hier est de </value>
  </data>
  <data name="WivaldiConnectionString" xml:space="preserve">
    <value>wivaldystring</value>
    <comment>Do not localize</comment>
  </data>
  <data name="AlertAskInstant" xml:space="preserve">
    <value>Quel type de suivi voulez-vous mettre en place ?</value>
  </data>
  <data name="AlertChange" xml:space="preserve">
    <value>Mettre à jour votre suivi ?</value>
  </data>
  <data name="AlertChangeInstant" xml:space="preserve">
    <value>Toutes les {0} secondes avec un seuil de {1} watts. </value>
  </data>
  <data name="AlertChangeTotal" xml:space="preserve">
    <value>Toutes les {0} secondes avec un seuil de {1} kWh. </value>
  </data>
  <data name="AlertEnd" xml:space="preserve">
    <value>*Fin des suivis.* N'hésitez pas à en re-paramétrer.</value>
  </data>
  <data name="AlertEndMax" xml:space="preserve">
    <value>*Fin des suivis.* Vous avez atteint le nombre maximal de suivis. Paramétrez un autre suivi pour en recevoir à nouveau.</value>
  </data>
  <data name="AlertExceedInstant" xml:space="preserve">
    <value>**Votre consommation a dépassé le seuil** : {0} watts vs {1} watts</value>
  </data>
  <data name="AlertExceedTotal" xml:space="preserve">
    <value>**Votre consommation a dépassé le seuil** : {0} kWh vs {1} kWh</value>
  </data>
  <data name="AlertInstant" xml:space="preserve">
    <value>Consommation instantanée</value>
  </data>
  <data name="AlertInterval" xml:space="preserve">
    <value>Saisissez un intervalle en secondes.</value>
  </data>
  <data name="AlertMaxTime" xml:space="preserve">
    <value>Le nombre maximal de minutes pour lequel vous pouvez recevoir des notifications est de {0} minutes. Cette valeur sera utilisée.</value>
  </data>
  <data name="AlertMinSec" xml:space="preserve">
    <value>Le temps minimal pour un rafraichissement des données est de {0} secondes. Cette valeur sera utilisée.</value>
  </data>
  <data name="AlertOK" xml:space="preserve">
    <value>Vous avez créé un suivi : </value>
  </data>
  <data name="AlertReallySorry" xml:space="preserve">
    <value>Je suis désolé, je ne comprends pas. Merci de ré-essayez plus tard.</value>
  </data>
  <data name="AlertRetryInterval" xml:space="preserve">
    <value>Je suis désolé, je ne comprends pas. Il faut saisir un nombre de secondes.</value>
  </data>
  <data name="AlertRetryMaxTime" xml:space="preserve">
    <value>Je suis désolé, je ne comprends pas. Il faut saisir un nombre de minutes.</value>
  </data>
  <data name="AlertRetryThreshold" xml:space="preserve">
    <value>Je suis désolé, je ne comprends pas. Il faut saisir un nombre qui correspond au seuil. Vérifiez que vous utilisez bien {0} comme séparateur décimal.</value>
  </data>
  <data name="AlertThresholdkWh" xml:space="preserve">
    <value>Saisissez votre seuil en kWh.</value>
  </data>
  <data name="AlertThresholdWatts" xml:space="preserve">
    <value>Saisissez votre seuil en watts.</value>
  </data>
  <data name="AlertTime" xml:space="preserve">
    <value>Saisissez le nombre de minutes pendant lesquelles vous voulez activer un suivi.</value>
  </data>
  <data name="AlertTotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="DialogNo" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="DialogWelcomeAlert" xml:space="preserve">
    <value>Paramétrer un suivi</value>
  </data>
  <data name="DialogYes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="AlertChangeSwitch" xml:space="preserve">
    <value>Vérifier les commandes toutes les {0} secondes</value>
  </data>
  <data name="AlertExceedSwitch" xml:space="preserve">
    <value>**Commande d'appareil** {0}</value>
  </data>
  <data name="AlertSwitch" xml:space="preserve">
    <value>Commande</value>
  </data>
  <data name="AlertThresholdSwitch" xml:space="preserve">
    <value>Please enter SWITCH TODO NOTIMPLEMENTED</value>
  </data>
</root>